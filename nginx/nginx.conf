upstream django {
    server unix:///socket/ogb.sock;
}

server {
    # redirect all incoming port 80 traffic to 443
    listen 80 default_server;
    server_name _;
    return 301 https://$host$request_uri;
}


server {
    listen 443 ssl http2 default_server;
    server_name localhost;
    ssl_certificate /certs/nginx-selfsigned.crt;
    ssl_certificate_key /certs/nginx-selfsigned.key;
    ssl_session_timeout 10m;
    ssl_ciphers TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE+AESGCM;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    add_header X-Frame-Options 'SAMEORIGIN' always;

    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; img-src 'self' 'unsafe-inline' w3.org data:; style-src 'self' 'unsafe-inline'; font-src 'self'; frame-src 'self'; object-src 'self'";

    charset     utf-8;
    # max upload size
    client_max_body_size 10M;

    # static files
    location /static {
        alias /static_root;
    }

    # see https://wellfire.co/learn/nginx-django-x-accel-redirects
    # ensure users have to log in
    location /download/ {
        internal;
        alias /database;
    }

    # Finally, send all non-media requests to the Django server.
    location / {
        uwsgi_pass django;
        include /etc/nginx/uwsgi_params;
    }
}