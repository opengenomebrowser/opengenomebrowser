require=function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r}()({1:[function(require,module,exports){(function(global){(function(){function inherit(dest,src,noParent){while(src&&src!==Object.prototype){Object.getOwnPropertyNames(src).forEach(function(name){if(name!=".class"&&!dest.hasOwnProperty(name)){var desc=Object.getOwnPropertyDescriptor(src,name);Object.defineProperty(dest,name,desc)}});if(noParent){break}src=src.__proto__}return dest}var Class=function(base,proto,options){if(typeof base!="function"){options=proto;proto=base;base=Object}if(!proto){proto={}}if(!options){options={}}var meta={name:options.name,base:base,implements:[]};var classProto=Class.clone(proto);if(options.implements){(Array.isArray(options.implements)?options.implements:[options.implements]).forEach(function(implementedType){if(typeof implementedType=="function"&&implementedType.prototype){meta.implements.push(implementedType);Class.extend(classProto,implementedType.prototype)}})}classProto.__proto__=base.prototype;var theClass=function(){if(typeof this.constructor=="function"){this.constructor.apply(this,arguments)}};meta.type=theClass;theClass.prototype=classProto;Object.defineProperty(theClass,".class.meta",{value:meta,enumerable:false,configurable:false,writable:false});Object.defineProperty(classProto,".class",{value:theClass,enumerable:false,configurable:false,writable:false});if(options.statics){Class.extend(theClass,options.statics)}return theClass};Class.extend=inherit;Class.clone=function(object){return inherit({},object)};function findType(meta,type){while(meta){if(meta.type.prototype===type.prototype){return true}for(var i in meta.implements){var implType=meta.implements[i];var implMeta=implType[".class.meta"];if(implMeta){if(findType(implMeta,type)){return true}}else{for(var proto=implType.prototype;proto;proto=proto.__proto__){if(proto===type.prototype){return true}}}}meta=meta.base?meta.base[".class.meta"]:undefined}return false}var Checker=Class({constructor:function(object){this.object=object},typeOf:function(type){if(this.object instanceof type){return true}var meta=Class.typeInfo(this.object);return meta&&findType(meta,type)}});Checker.prototype.a=Checker.prototype.typeOf;Checker.prototype.an=Checker.prototype.typeOf;Class.is=function(object){return new Checker(object)};Class.typeInfo=function(object){var theClass=object.__proto__[".class"];return theClass?theClass[".class.meta"]:undefined};Class.VERSION=[0,0,2];if(typeof module!=="undefined"){module.exports=Class}else{global.Class=Class}}).call(this)}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{})},{}],2:[function(require,module,exports){(function(factory){if(typeof exports==="object"){factory(exports)}else{factory(this)}}).call(this,function(root){var slice=Array.prototype.slice,each=Array.prototype.forEach;var extend=function(obj){if(typeof obj!=="object")throw obj+" is not an object";var sources=slice.call(arguments,1);each.call(sources,function(source){if(source){for(var prop in source){if(typeof source[prop]==="object"&&obj[prop]){extend.call(obj,obj[prop],source[prop])}else{obj[prop]=source[prop]}}}});return obj};root.extend=extend})},{}],"biojs-vis-blasterjs":[function(require,module,exports){let blasterjs;let Class=require("js-class");module.exports=blasterjs=Class({constructor:function(options){const self=this;require("js-extend").extend(this.opt,options);const css="table tbody tr td button:hover{ text-decoration: underline;}";const style=document.createElement("style");if(style.styleSheet){style.styleSheet.cssText=css}else{style.appendChild(document.createTextNode(css))}document.getElementsByTagName("head")[0].appendChild(style);if(self.opt.string){const myBlob=new Blob([self.opt.string],{type:"text/plain"});const fakeEvent={target:{files:[myBlob]}};self._displayAlignments(fakeEvent,self)}else{document.getElementById(self.opt.input).addEventListener("change",function(evt){self._displayAlignments(evt,self)},false)}},opt:{input:"blastinput",multipleAlignments:"blast-multiple-alignments",alignmentsTable:"blast-alignments-table",singleAlignment:"blast-single-alignment"},_displayAlignments:function(evt,self){if(window.File&&window.FileReader&&window.FileList&&window.Blob){const f=evt.target.files[0];if(f){const r=new FileReader;r.onload=function(e){try{const queries=getQueries(e.target.result);const alignments=getAlignments(queries[0]);const queryLength=getQueryLength(queries[0]);if(alignments.length===0){createEmptyAlignmentComparison(queries,[],0,queryLength,true,true,self)}else{const hsps=alignments[0].hsp.length;createAlignmentComparison(queries,hsps,0,alignments,queryLength,true,true,self);createAlignmentTable(alignments,self);createSingleAlignment(alignments[0],self,hsps,0)}}catch(err){const divs=["blast-multiple-alignments","blast-alignments-table","blast-single-alignment"];for(let i=0;i<divs.length;i++){const div=document.getElementById(divs[i]);while(div.firstChild){div.removeChild(div.firstChild)}}console.error(err);alert("ERROR WHILE UPLOADING DATA: You have uploaded an invalid BLAST output file.")}};r.readAsText(f)}else{alert("ERROR WHILE UPLOADING DATA: Failed to load file.")}}else{alert("The File APIs are not fully supported by your browser.")}function BlastAlignment(description,length,totalScore,queryCover,hsp){this.description=description;this.length=length;this.totalScore=totalScore;this.queryCover=queryCover;this.hsp=hsp}function HSP(score,eValue,identities,positives,gaps,queryStart,query,queryEnd,comparison,subjectStart,subject,subjectEnd){this.score=score;this.eValue=eValue;this.identitiesRel=(100*identities[0]/identities[1]).toFixed(1)+"%";this.identitiesFraction=`${identities[0]}/${identities[1]}`;this.positives=positives;this.gaps=gaps;this.queryStart=queryStart;this.query=query;this.queryEnd=queryEnd;this.comparison=comparison;this.subjectStart=subjectStart;this.subject=subject;this.subjectEnd=subjectEnd}String.prototype.startsWith=function(prefix){return this.indexOf(prefix)===0};function getQueries(content){const lines=content.split("\n");if(lines[2].startsWith("<BlastOutput>")){return getXMLQueries(content)}else{return getTextQueries(content)}}function getXMLQueries(content){const queries=[];const lines=content.split("\n").map(line=>line.trim());let count=0;for(let i=0;i<lines.length;i++){if(lines[i].startsWith("<Iteration>")){count++}}if(count===1){queries.push(content)}else{let j=0;let init="";for(let i=0;i<lines.length;i++){j=i;if(lines[i].startsWith("<Iteration>")){break}else{init=init+lines[i]+"\n"}}for(let x=0;x<count;x++){let query=init+lines[j]+"\n";j++;while(lines[j]!==undefined&&!lines[j].startsWith("<Iteration>")){query=query+lines[j]+"\n";j++}queries.push(query)}}return queries}function getTextQueries(content){const queries=[];const lines=content.split("\n");let count=0;for(let i=0;i<lines.length;i++){if(lines[i].startsWith("Query=")){count++}}if(count===1){queries.push(content)}else{let j=0;let init="";for(let i=0;i<lines.length;i++){j=i;if(lines[i].startsWith("Query=")){break}else{init=init+lines[i]+"\n"}}for(let x=0;x<count;x++){let query=init+lines[j]+"\n";j++;while(lines[j]!==undefined&&!lines[j].startsWith("Query=")){query=query+lines[j]+"\n";j++}query=query+"\nend\n";queries.push(query)}}return queries}function getQueryLength(content){const lines=content.split("\n");if(lines[2].startsWith("<BlastOutput>")){return getXMLQueryLength(content)}else{return getTextQueryLength(content)}}function getXMLQueryLength(content){const lines=content.split("\n");let length=0;for(let i=0;i<lines.length;i++){if(lines[i].includes("<Iteration_query-len>")){length=lines[i].split(">")[1].split("</")[0];break}}return length}function getTextQueryLength(content){const lines=content.split("\n");let length=0;for(let i=0;i<lines.length;i++){if(lines[i].startsWith("Length=")){length=lines[i].split("=")[1];break}}return length}function getAlignments(content){const lines=content.split("\n");if(lines[2].startsWith("<BlastOutput>")){return parseBlastXML(content)}else{return parseBlastText(content)}}function parseBlastXML(content){const lines=content.split("\n");const alignments=[];for(let i=0;i<lines.length;i++){if(lines[i].startsWith("<Hit>")){let hit="";for(let c=i;c<lines.length;c++){hit+=lines[c];if(lines[c].includes("</Hit>")){break}}const id=hit.split("<Hit_id>")[1].split("</")[0];const def=hit.split("<Hit_def>")[1].split("</")[0];const description=id.concat(" ").concat(def);const length=hit.split("<Hit_len>")[1].split("</")[0];const hsps_a=[];const hsps_s=hit.split("<Hit_hsps>")[1].split("</Hit_hsps>")[0];const hsps=hsps_s.split("</Hsp>");for(const hsp of hsps.slice(0,-1)){const score=hsp.split("<Hsp_bit-score>")[1].split("</")[0];const eValue=hsp.split("<Hsp_evalue>")[1].split("</")[0];const idnt=hsp.split("<Hsp_identity>")[1].split("</")[0];const a_length=hsp.split("<Hsp_align-len>")[1].split("</")[0];const identities=[idnt,a_length];let positives,gps,gaps;if(lines[3].includes("<BlastOutput_program>blastn</BlastOutput_program>")){positives="N/A";gps=hsp.split("<Hsp_gaps>")[1].split("</")[0];gaps=gps/a_length*100}else{pstves=hsp.split("<Hsp_positive>")[1].split("</")[0];positives=parseFloat(pstves/a_length*100).toFixed(0);gps=hsp.split("<Hsp_gaps>")[1].split("</")[0];gaps=gps/a_length*100}const queryStart=hsp.split("<Hsp_query-from>")[1].split("</")[0];const query=hsp.split("<Hsp_qseq>")[1].split("</")[0];const queryEnd=hsp.split("<Hsp_query-to>")[1].split("</")[0];const comparison=hsp.split("<Hsp_midline>")[1].split("</")[0];const sbjctStart=hsp.split("<Hsp_hit-from>")[1].split("</")[0];const sbjct=hsp.split("<Hsp_hseq>")[1].split("</")[0];const sbjctEnd=hsp.split("<Hsp_hit-to>")[1].split("</")[0];hsps_a.push(new HSP(score,eValue,identities,positives,parseFloat(gaps).toFixed(0),queryStart,query,queryEnd,comparison,sbjctStart,sbjct,sbjctEnd))}let totalScore=parseFloat(hsps_a[0].score);for(hsp of hsps_a){totalScore=totalScore+parseFloat(hsp.score)}const alignment=new BlastAlignment(description,length,totalScore.toFixed(1),getQueryCover(hsps_a,getQueryLength(content)),hsps_a);alignments.push(alignment)}}return alignments}function parseBlastText(content){const lines=content.split("\n");const alignments=[];for(let i=0;i<lines.length;i++){if(lines[i].startsWith(">")){let line1=lines[i].split(">")[1];let line2="";let currentLine=i;while(line2===""){currentLine=currentLine+1;if(lines[currentLine].startsWith("Length=")){line2=lines[currentLine]}else{line1+=lines[currentLine]}}const description=line1;const length=line2.split("=")[1];const hsps=[];let multiple=false;do{if(multiple){currentLine=currentLine-1}if(lines[currentLine+2].startsWith(" Features in this part of subject sequence:")){currentLine=currentLine+3;while(!lines[currentLine+2].startsWith(" Score =")){currentLine++}}const score=lines[currentLine+2].split(",")[0].replace(/\s\s+/g," ").split(" ")[3];const eValue=lines[currentLine+2].split(",")[1].split(" ")[4];let identities=lines[currentLine+3].split(/[ \/]+/);const idnt=parseInt(identities[3]);const a_length=parseInt(identities[4]);if(isNaN(idnt))throw"Failed to parse idnt from BLAST (text format)";if(isNaN(a_length))throw"Failed to parse a_length from BLAST (text format)";identities=[idnt,a_length];let positives,gaps;if(lines[0].startsWith("BLASTN")){positives="N/A";gaps=lines[currentLine+3].split(",")[1].split("(")[1].substr(0,lines[currentLine+3].split(",")[1].split("(")[1].length-2)}else{positives=lines[currentLine+3].split(",")[1].split("(")[1].substr(0,lines[currentLine+3].split(",")[1].split("(")[1].length-2);gaps=lines[currentLine+3].split(",")[2].split("(")[1].substr(0,lines[currentLine+3].split(",")[2].split("(")[1].length-2)}if(lines[currentLine+4].split(",")[0].split(" ")[1]==="Frame"||lines[currentLine+4].startsWith(" Strand")){currentLine=currentLine+1}const queryStart=lines[currentLine+5].substring(5).replace(/^\s+/g,"").split(" ")[0];let query=lines[currentLine+5].substring(5).replace(/\s+/g,"").replace(/[0-9]/g,"");let queryEnd=lines[currentLine+5].substring(5).replace(/^\s+/g,"").split(" ")[lines[currentLine+5].substring(5).replace(/^\s+/g,"").split(" ").length-1];let comparison=lines[currentLine+6].replace(/^\s+/g,"");const sbjctStart=lines[currentLine+7].substring(5).replace(/^\s+/g,"").split(" ")[0];let sbjct=lines[currentLine+7].substring(5).replace(/\s+/g,"").replace(/[0-9]/g,"");let sbjctEnd=lines[currentLine+7].substring(5).replace(/^\s+/g,"").split(" ")[lines[currentLine+7].substring(5).replace(/^\s+/g,"").split(" ").length-1];currentLine=currentLine+9;while(lines[currentLine].startsWith("Query")){const nextQuery=lines[currentLine].substring(5).replace(/\s+/g,"").replace(/[0-9]/g,"");query+=nextQuery;queryEnd=lines[currentLine].substring(5).replace(/^\s+/g,"").split(" ")[lines[currentLine].substring(5).replace(/^\s+/g,"").split(" ").length-1];sbjct+=lines[currentLine+2].substring(5).replace(/\s+/g,"").replace(/[0-9]/g,"");sbjctEnd=lines[currentLine+2].substring(5).replace(/^\s+/g,"").split(" ")[lines[currentLine+2].substring(5).replace(/^\s+/g,"").split(" ").length-1];let nextComparison=lines[currentLine+1].replace(/^\s+/g,"");if(nextQuery.length>nextComparison.length){const diference=nextQuery.length-nextComparison.length;for(let j=0;j<diference;j++){nextComparison=" "+nextComparison}}comparison+=nextComparison;currentLine=currentLine+4}const hsp=new HSP(score,eValue,identities,positives,gaps,queryStart,query,queryEnd,comparison,sbjctStart,sbjct,sbjctEnd);hsps.push(hsp);multiple=true}while(lines[currentLine+1].startsWith(" Score"));let totalScore=parseFloat(hsps[0].score);for(let x=1;x<hsps.length;x++){totalScore=totalScore+parseFloat(hsps[x].score)}const alignment=new BlastAlignment(description,length,totalScore.toFixed(1),getQueryCover(hsps,getQueryLength(content)),hsps);alignments.push(alignment)}}return alignments}function getQueryCover(hsps,length){let cover=0;const noOver=getHSPWithoutOverlapping(hsps);for(let i=0;i<noOver.length;i++){cover=cover+parseInt(100*(noOver[i].end-noOver[i].start+1)/length)}return cover}function getHSPWithoutOverlapping(hsps){const hspNoOver=[];for(let i=0;i<hsps.length;i++){if(parseInt(hsps[i].queryStart)>parseInt(hsps[i].queryEnd)){hspNoOver.push({start:parseInt(hsps[i].queryEnd),end:parseInt(hsps[i].queryStart)})}else{hspNoOver.push({start:parseInt(hsps[i].queryStart),end:parseInt(hsps[i].queryEnd)})}}return getNoOverlappingArray(partitionIntoOverlappingRanges(hspNoOver))}function partitionIntoOverlappingRanges(array){array.sort(function(a,b){if(a.start<b.start)return-1;if(a.start>b.start)return 1;return 0});const getMaxEnd=function(array){if(array.length===0)return false;array.sort(function(a,b){if(a.end<b.end)return 1;if(a.end>b.end)return-1;return 0});return array[0].end};const rarray=[];let g=0;rarray[g]=[array[0]];for(let i=1,l=array.length;i<l;i++){if(array[i].start>=array[i-1].start&&array[i].start<getMaxEnd(rarray[g])){rarray[g].push(array[i])}else{g++;rarray[g]=[array[i]]}}return rarray}function getNoOverlappingArray(array){const result=[];for(let i=0;i<array.length;i++){let start=array[i][0].start;let end=array[i][0].end;for(let j=0;j<array[i].length;j++){if(array[i][j].start<start)start=array[i][j].start;if(array[i][j].end>end)end=array[i][j].end}result.push({start:start,end:end})}return result}function getColor(colored,scoring,score,evalue){let colorNb;if(!scoring){if(evalue>100){colorNb=1}else if(evalue<=100&&evalue>1){colorNb=2}else if(evalue<=1&&evalue>.01){colorNb=3}else if(evalue<=.01&&evalue>1e-5){colorNb=4}else{colorNb=5}}else{if(score<40){colorNb=1}else if(score>=40&&score<50){colorNb=2}else if(score>=50&&score<80){colorNb=3}else if(score>=80&&score<200){colorNb=4}else{colorNb=5}}return getDivColor(colored,colorNb)}function getDivColorText(scoring,div){if(!scoring){switch(div){case 1:return">100";case 2:return"100-1";case 3:return"1-1e<sup>-2</sup>";case 4:return"1e<sup>-2</sup>-1e<sup>-5</sup>";case 5:return"<1e<sup>-5</sup>";default:return"0"}}else{switch(div){case 1:return"<40";case 2:return"40-50";case 3:return"50-80";case 4:return"80-200";case 5:return">=200";default:return"0"}}}function getDivColor(colored,div){if(colored){switch(div){case 1:return"#5C6D7E";case 2:return"#9B59B6";case 3:return"#5CACE2";case 4:return"#57D68D";case 5:return"#C0392B";default:return"#FFF"}}else{switch(div){case 1:return"#BCBCBC";case 2:return"#989898";case 3:return"#747474";case 4:return"#565656";case 5:return"#343434";default:return"#FFF"}}}function selectAlignment(alignment){const item=document.getElementById(alignment).parentElement.parentElement;const items=document.getElementsByClassName("alignment-table-description");let i;for(i=0;i<items.length;i++){items[i].style.fontWeight="normal";items[i].parentElement.parentElement.style.fontWeight="normal"}item.style.fontWeight="bold";document.getElementById(alignment).style.fontWeight="bold"}function createColorsDiv(colored,scoring){const container=document.createElement("div");const divSpace=document.createElement("div");const divClear=document.createElement("div");container.style.color="#EEE";divSpace.style.minWidth="50px";divSpace.style.minHeight="10px";divSpace.style.float="left";container.appendChild(divSpace);for(let i=1;i<=5;i++){const div=document.createElement("div");div.style.minWidth="100px";div.style.textAlign="center";div.style.float="left";div.innerHTML=getDivColorText(scoring,i);div.style.fontWeight="bold";div.style.backgroundColor=getDivColor(colored,i);container.appendChild(div)}divClear.style.clear="both";container.appendChild(divClear);return container}function createQueryDiv(colored){const container=document.createElement("div");const divSpace=document.createElement("div");const divQuery=document.createElement("div");const divClear=document.createElement("div");container.style.marginTop="3px";container.style.color="#5C6D7E";container.style.fontSize="10px";divSpace.style.width="50px";divSpace.innerHTML="QUERY";divSpace.style.fontWeight="bold";divSpace.style.float="left";divQuery.style.width="500px";divQuery.style.height="10px";divQuery.style.float="left";divQuery.style.marginTop="2px";divClear.style.clear="both";if(colored){divQuery.style.backgroundColor="#C0392B"}else{divQuery.style.backgroundColor="#343434"}container.appendChild(divSpace);container.appendChild(divQuery);container.appendChild(divClear);return container}function createNumbersDiv(lenght){const container=document.createElement("div");const divSpace=document.createElement("div");let divNumbers=document.createElement("div");const divClear=document.createElement("div");container.style.marginBottom="5px";container.style.fontSize="11px";divSpace.style.minWidth="50px";divSpace.style.minHeight="10px";divSpace.style.float="left";divNumbers.style.float="left";divClear.style.clear="both";divNumbers=divideDivNumbers(divNumbers,lenght);container.appendChild(divSpace);container.appendChild(divNumbers);container.appendChild(divClear);return container}function divideDivNumbers(container,lenght){const divClear=document.createElement("div");if(lenght>4){if(lenght%5===0){container=createDivisionsDivNumbers(container,5,lenght/5,100)}else{const pixels=500/(5+lenght%5/5);container=createDivisionsDivNumbers(container,5,parseInt(lenght/5),parseInt(pixels));const pxrest=parseInt(500-pixels*5);const div=document.createElement("div");div.style.float="left";div.style.width=pxrest+"px";div.style.textAlign="right";div.innerHTML=lenght;container.appendChild(div)}}else{container=createDivisionsDivNumbers(container,lenght,1,parseInt(500/lenght))}divClear.style.clear="both";container.appendChild(divClear);return container}function createDivisionsDivNumbers(container,divisions,size,pixels){for(let i=0;i<divisions;i++){if(i===0){const px2=pixels/2;const div1=document.createElement("div");const div2=document.createElement("div");div1.style.float="left";div1.style.width=px2+"px";div1.style.textAlign="left";div1.innerHTML="0";div2.style.float="left";div2.style.width=px2+"px";div2.style.textAlign="right";div2.innerHTML=size*(i+1);container.appendChild(div1);container.appendChild(div2)}else{const div=document.createElement("div");div.style.float="left";div.style.width=pixels+"px";div.style.textAlign="right";div.innerHTML=size*(i+1);container.appendChild(div)}}return container}function createHeader(container,colored,scoring,lenght){const text=document.createElement("div");const colors=createColorsDiv(colored,scoring);const query=createQueryDiv(colored);const numbers=createNumbersDiv(lenght);text.style.color="#5C6D7E";text.style.textAlign="center";text.style.paddingBottom="5px";text.innerHTML="COLOR KEY FOR ALIGNMENT SCORES";text.style.fontWeight="bold";container.appendChild(text);container.appendChild(colors);container.appendChild(query);container.appendChild(numbers);return container}function createBody(alignments,queryLength,container,colored,scoring){const alignmentContainer=document.createElement("div");alignmentContainer.style.paddingBottom="10px";for(let i=0;i<alignments.length;i++){const alignment=createAlignmentDiv(getColor(colored,scoring,alignments[i].hsp[0].score,alignments[i].hsp[0].eValue),alignments[i],queryLength);alignment.style.marginBottom="4px";alignmentContainer.appendChild(alignment)}container.appendChild(alignmentContainer);return container}function createAlignmentDiv(color,alignment,queryLength){const noOver=getHSPWithoutOverlapping(alignment.hsp);const container=document.createElement("div");const divClear=document.createElement("div");container.style.minHeight="12px";for(let i=0;i<noOver.length;i++){const white=document.createElement("div");const colored=document.createElement("div");const link=document.createElement("a");let init,offset;if(i===0){if(noOver[0].start===1)init=parseInt(50+500*(noOver[0].start-1)/queryLength);else init=parseInt(50+500*noOver[0].start/queryLength);offset=parseInt(550-init-500*(queryLength-noOver[0].end)/queryLength)}else{init=parseInt(500*(noOver[i].start-noOver[i-1].end)/queryLength);offset=parseInt(500*(noOver[i].end-noOver[i].start)/queryLength)}white.style.width=init+"px";white.style.minHeight="4px";white.style.float="left";colored.style.width=offset+"px";colored.style.minHeight="12px";colored.style.float="left";colored.style.backgroundColor=color;colored.onmouseout=function(){document.getElementById("defline").value=" Mouse over to show defline and scores, click to show alignments"};colored.onmouseover=function(){document.getElementById("defline").value=" "+alignment.description+". S="+alignment.hsp[0].score+" E="+alignment.hsp[0].eValue};link.href="#"+alignment.description.split(" ")[0];link.onclick=function(){selectAlignment(alignment.description.split(" ")[0])};link.appendChild(colored);container.appendChild(white);container.appendChild(link)}divClear.style.clear="both";container.appendChild(divClear);return container}function createChangeScoringButton(queries,hsps,position,alignments,lenght,colored,scoring,self){const button=document.createElement("button");button.id="changeScore";button.className="btn";button.style.marginRight="10px";button.style.marginTop="5px";const text=document.createTextNode(scoring?"Change scoring to E value":"Change scoring to Max score");button.appendChild(text);button.onclick=function(){changeScoring(queries,hsps,position,alignments,lenght,button,colored,scoring,self)};return button}function createChangeColorButton(queries,hsps,position,alignments,lenght,colored,scoring,self){const button=document.createElement("button");button.id="changeColors";button.className="btn";button.style.marginRight="10px";button.style.marginTop="5px";const text=document.createTextNode(colored?"Change colours to grayscale":"Change colours to full colored");button.appendChild(text);button.onclick=function(){changeColors(queries,hsps,position,alignments,lenght,button,colored,scoring,self)};return button}function createDownloadButton(type){const button=document.createElement("button");button.id="downloadAlignments"+type;button.className="btn";button.style.marginRight="10px";button.style.marginTop="5px";const text=document.createTextNode("Download as "+type);button.appendChild(text);button.addEventListener("click",function(){downloadAlignmentsImg(type)},false);return button}function changeColors(queries,hsps,position,alignments,lenght,button,colored,scoring,self){colored=!colored;button.removeChild(button.childNodes[0]);const blastDiv=document.getElementById(self.opt.multipleAlignments);while(blastDiv.firstChild){blastDiv.removeChild(blastDiv.firstChild)}createAlignmentComparison(queries,hsps,position,alignments,lenght,colored,scoring,self)}function changeScoring(queries,hsps,position,alignments,lenght,button,colored,scoring,self){scoring=!scoring;button.removeChild(button.childNodes[0]);const blastDiv=document.getElementById(self.opt.multipleAlignments);while(blastDiv.firstChild){blastDiv.removeChild(blastDiv.firstChild)}createAlignmentComparison(queries,hsps,position,alignments,lenght,colored,scoring,self)}function downloadAlignmentsImg(type){const buttons=document.getElementById("blast-multiple-alignments-buttons");const input=document.getElementById("defline");const container=document.getElementById("alignments-container");container.removeChild(buttons);container.removeChild(input);html2canvas(container,{onrendered:function(canvas){document.body.appendChild(canvas);let a=document.createElement("a");document.body.appendChild(a);if(type==="JPEG"){a.href=canvas.toDataURL("image/jpeg")}else{a.href=canvas.toDataURL("img/png")}a.download="alignments."+type.toLowerCase();a.click();document.body.removeChild(canvas);document.body.removeChild(a);container.appendChild(input);container.appendChild(buttons);a=document.createElement("a");document.body.appendChild(a);a.href="#blast-multiple-alignments";a.click();document.body.removeChild(a)}})}function getQueryText(content){const lines=content.split("\n");if(lines[2].startsWith("<BlastOutput>")){return getXMLQueryText(content)}else{return getTextQueryText(content)}}function getXMLQueryText(content){const lines=content.split("\n");for(let i=0;i<lines.length;i++){if(lines[i].includes("<Iteration_query-def>")){return lines[i].split(">")[1].split("</")[0]}}}function getTextQueryText(content){const lines=content.split("\n");let text="";for(let i=0;i<lines.length;i++){if(lines[i].startsWith("Query=")){text=lines[i].split("=")[1];i++;while(!lines[i].startsWith("Length=")){text=text+" "+lines[i];i++}break}}return text}function goToQuery(queries,hsps,position,queryLength,colored,scoring,self){const alignments=getAlignments(queries[position]);const queryLength_=getQueryLength(queries[position]);if(alignments.length===0){const divs=["blast-alignments-table","blast-single-alignment"];for(const div of divs){while(div.firstChild){div.removeChild(div.firstChild)}}createEmptyAlignmentComparison(queries,[],position,queryLength_,true,true,self)}else{createAlignmentComparison(queries,hsps,position,alignments,queryLength_,colored,scoring,self);createAlignmentTable(alignments,self);const nHsps=alignments[0].hsp.length;createSingleAlignment(alignments[0],self,nHsps,0)}}function createSelectQueries(queries,hsps,position,queryLength,colored,scoring,self){position=parseInt(position);const selectQuery=document.createElement("select");selectQuery.style.width="430px";selectQuery.style.marginBottom="20px";selectQuery.style.color="#5C6D7E";selectQuery.style.float="right";for(let i=0;i<queries.length;i++){const query=document.createElement("option");query.value=i;query.text=getQueryText(queries[i]);if(i===position){query.selected="selected"}selectQuery.appendChild(query)}selectQuery.onchange=function(){goToQuery(queries,hsps,selectQuery.value,queryLength,colored,scoring,self)};return selectQuery}function createEmptyAlignmentComparison(queries,hsps,position,queryLength,colored,scoring,self){const blastDiv=document.getElementById(self.opt.multipleAlignments);while(blastDiv.hasChildNodes()){blastDiv.removeChild(blastDiv.firstChild)}let container=document.createElement("div");const containerButtons=document.createElement("div");const empty=document.createElement("div");blastDiv.style.paddingTop="20px";container.id="alignments-container";container.style.border="thin solid #DDD";container.style.margin="0 auto";container.style.padding="10px";container.style.maxWidth="580px";container.style.backgroundColor="#FFF";empty.innerHTML="***NO HITS FOUND***";empty.style.fontWeight="bold";empty.style.paddingTop="30px";empty.style.paddingBottom="50px";empty.style.textAlign="center";if(queries.length>1){const selectQuery=createSelectQueries(queries,hsps,position,queryLength,colored,scoring,self);const resultsFor=document.createElement("div");const clearDiv=document.createElement("div");clearDiv.style.clear="both";resultsFor.innerHTML="RESULTS FOR:";resultsFor.style.fontWeight="bold";resultsFor.style.marginBottom="5px";resultsFor.style.color="#5C6D7E";resultsFor.style.float="left";container.appendChild(resultsFor);container.appendChild(selectQuery);container.appendChild(clearDiv)}container=createHeader(container,colored,scoring,queryLength);container.appendChild(empty);blastDiv.style.minWidth="580px";container.appendChild(containerButtons);blastDiv.appendChild(container)}function createAlignmentComparison(queries,hsps,position,alignments,queryLength,colored,scoring,self){const blastDiv=document.getElementById(self.opt.multipleAlignments);while(blastDiv.hasChildNodes()){blastDiv.removeChild(blastDiv.firstChild)}let container=document.createElement("div");const containerButtons=document.createElement("div");const input=document.createElement("input");const buttonColors=createChangeColorButton(queries,hsps,position,alignments,queryLength,colored,scoring,self);const buttonScoring=createChangeScoringButton(queries,hsps,position,alignments,queryLength,colored,scoring,self);const buttonDownloadPNG=createDownloadButton("PNG");const buttonDownloadJPEG=createDownloadButton("JPEG");blastDiv.style.paddingTop="20px";input.id="defline";input.name="defline";input.type="text";input.value=" Mouse over to show defline and scores, click to show alignments";input.style.width="556px";input.style.padding="1px";input.style.border=0;input.style.cursos="auto";container.id="alignments-container";container.style.border="thin solid #DDD";container.style.margin="0 auto";container.style.padding="10px";container.style.maxWidth="580px";container.style.backgroundColor="#FFF";if(queries.length>1){const selectQuery=createSelectQueries(queries,hsps,position,queryLength,colored,scoring,self);const resultsFor=document.createElement("div");const clearDiv=document.createElement("div");clearDiv.style.clear="both";resultsFor.innerHTML="RESULTS FOR:";resultsFor.style.fontWeight="bold";resultsFor.style.marginBottom="5px";resultsFor.style.color="#5C6D7E";resultsFor.style.float="left";container.appendChild(resultsFor);container.appendChild(selectQuery);container.appendChild(clearDiv)}container=createHeader(container,colored,scoring,queryLength);container=createBody(alignments,queryLength,container,colored,scoring);container.appendChild(input);containerButtons.style.textAlign="right";containerButtons.id="blast-multiple-alignments-buttons";blastDiv.style.minWidth="580px";containerButtons.appendChild(buttonScoring);containerButtons.appendChild(buttonColors);containerButtons.appendChild(document.createElement("br"));containerButtons.appendChild(buttonDownloadPNG);containerButtons.appendChild(buttonDownloadJPEG);container.appendChild(containerButtons);blastDiv.appendChild(container)}function createTableHeader(){const table=document.createElement("table");const thead=document.createElement("thead");const theadTr=document.createElement("tr");table.className="table table-striped";for(const column of["Description","Max score","Total score","Query cover","E value","Identities (rel)","Identities"]){el=document.createElement("th");el.innerHTML=column;el.style.fontWeight="bold";theadTr.appendChild(el)}thead.appendChild(theadTr);table.appendChild(thead);return table}function createTableButtons(alignments){const container=document.createElement("div");const butTSV=document.createElement("button");const butImgJPEG=document.createElement("button");const butImgPNG=document.createElement("button");container.style.textAlign="right";butTSV.style.marginRight="10px";butTSV.className="btn";butTSV.innerHTML="Download as TSV";butTSV.onclick=function(){downloadTableTSV(alignments)};butImgPNG.className="btn";butImgPNG.innerHTML="Download as PNG";butImgPNG.onclick=function(){downloadTableImg("PNG")};butImgPNG.style.marginRight="10px";butImgJPEG.className="btn";butImgJPEG.innerHTML="Download as JPEG";butImgJPEG.onclick=function(){downloadTableImg("JPEG")};container.appendChild(butTSV);container.appendChild(butImgPNG);container.appendChild(butImgJPEG);return container}function createAlignmentTable(alignments,self){const tableDiv=document.getElementById(self.opt.alignmentsTable);while(tableDiv.hasChildNodes()){tableDiv.removeChild(tableDiv.firstChild)}const imgContainer=document.createElement("div");const butContainer=createTableButtons(alignments);const table=createTableHeader();const tbody=document.createElement("tbody");tableDiv.style.paddingTop="50px";imgContainer.style.backgroundColor="#FFF";imgContainer.id="blast-alignments-table-img";for(const alignment of alignments){const tr=document.createElement("tr");const tdDesc=document.createElement("td");const butDesc=document.createElement("button");butDesc.alignment=alignment;butDesc.onclick=function(){if(self.opt.callback){self.opt.callback(this.alignment)}else{location.href="#"+self.opt.singleAlignment;createSingleAlignment(this.alignment,self,this.alignment.hsp.length,0)}};butDesc.id=alignment.description.split(" ")[0];butDesc.innerHTML=alignment.description;butDesc.style.border=0;butDesc.style.padding=0;butDesc.style.display="inline";butDesc.style.background="none";butDesc.className="alignment-table-description";tdDesc.appendChild(butDesc);const hsp=alignment.hsp[0];const tdMaxScore=document.createElement("td");tdMaxScore.innerHTML=hsp.score;const tdTotalScore=document.createElement("td");tdTotalScore.innerHTML=alignment.totalScore;const tdQueryCover=document.createElement("td");tdQueryCover.innerHTML=alignment.queryCover+"%";const tdEvalue=document.createElement("td");tdEvalue.innerHTML=hsp.eValue;const tdIdentitiesRel=document.createElement("td");tdIdentitiesRel.innerHTML=hsp.identitiesRel;const tdIdentitiesFrac=document.createElement("td");tdIdentitiesFrac.innerHTML=hsp.identitiesFraction;tr.appendChild(tdDesc);tr.appendChild(tdMaxScore);tr.appendChild(tdTotalScore);tr.appendChild(tdQueryCover);tr.appendChild(tdEvalue);tr.appendChild(tdIdentitiesRel);tr.appendChild(tdIdentitiesFrac);tbody.appendChild(tr)}table.appendChild(tbody);imgContainer.appendChild(table);tableDiv.appendChild(imgContainer);tableDiv.appendChild(butContainer)}function downloadTableImg(type){const items=document.getElementsByClassName("alignment-table-description");for(let i=0;i<items.length;i++){items[i].style.fontWeight="normal";items[i].parentElement.parentElement.style.fontWeight="normal"}const container=document.getElementById("blast-alignments-table-img");html2canvas(container,{onrendered:function(canvas){document.body.appendChild(canvas);let a=document.createElement("a");document.body.appendChild(a);if(type==="JPEG"){a.href=canvas.toDataURL("image/jpeg")}else{a.href=canvas.toDataURL("img/png")}a.download="alignments-table."+type.toLowerCase();a.click();document.body.removeChild(canvas);document.body.removeChild(a);a=document.createElement("a");document.body.appendChild(a);a.href="#blast-alignments-table";a.click();document.body.removeChild(a)}})}function downloadTableTSV(alignments){let tsvContent="data:text/tsv;charset=utf-8,";tsvContent+="Description\tScore\teValue\tIdentities [%]\tIdentities [fraction]\tPositives\tGaps\n";for(const alignment of alignments){const hsp=alignment.hsp[0];tsvContent+=`${alignment.description}\t${hsp.score}\t${hsp.eValue}\t${hsp.identitiesRel}\t${hsp.identitiesFraction}\t${hsp.positives}\t${hsp.gaps}\n`}const encodedUri=encodeURI(tsvContent);const link=document.createElement("a");link.setAttribute("href",encodedUri);link.setAttribute("download","alignments-table.tsv");link.click()}function createSingleAlignment(alignment,self,hsps,hsp){const alignmentDiv=document.getElementById(self.opt.singleAlignment);while(alignmentDiv.hasChildNodes()){alignmentDiv.removeChild(alignmentDiv.firstChild)}const alignmentPre=document.createElement("pre");const alignmentContainer=document.createElement("div");const buttonDownloadJPEG=document.createElement("button");const buttonDownloadPNG=document.createElement("button");const span=document.createElement("span");const divStatsParent=document.createElement("div");const divScore=document.createElement("div");const divEvalue=document.createElement("div");const divIdentity=document.createElement("div");const divPositives=document.createElement("div");const divGaps=document.createElement("div");const divClear=document.createElement("div");const queryDiv=createSingleQueryDiv(alignment.hsp[hsp].query,alignment.hsp[hsp].queryStart,alignment.hsp[hsp].queryEnd);const comparisonDiv=createSingleComparisonDiv(alignment.hsp[hsp].comparison);const subjectDiv=createSingleSubjectDiv(alignment.hsp[hsp].subject,alignment.hsp[hsp].subjectStart,alignment.hsp[hsp].subjectEnd);alignmentPre.id="blast-single-alignment-pre";alignmentPre.style.color="#2c3e50";alignmentPre.style.paddingTop="25px";alignmentPre.style.paddingBottom="40px";alignmentPre.style.textAlign="left";alignmentPre.style.fontFamily="Helvetica,Arial,sans-serif";alignmentContainer.id="blasterjs-alignment-container";alignmentContainer.style.margin="0 auto";alignmentContainer.style.display="table";alignmentContainer.style.paddingTop="30px";alignmentDiv.style.textAlign="right";alignmentDiv.style.paddingTop="50px";buttonDownloadPNG.className="btn";buttonDownloadPNG.innerHTML="Download as PNG";buttonDownloadPNG.style.marginRight="10px";buttonDownloadPNG.onclick=function(){downloadSingleAlignmentImg(alignment,"PNG")};buttonDownloadJPEG.className="btn";buttonDownloadJPEG.innerHTML="Download as JPEG";buttonDownloadJPEG.onclick=function(){downloadSingleAlignmentImg(alignment,"JPEG")};span.innerHTML=alignment.description;span.style.paddingLeft="15px";span.style.fontWeight="bold";span.style.fontSize="15px";span.style.fontFamily="Helvetica,Arial,sans-serif";divStatsParent.id="blasterjs-stats-div";divStatsParent.style.paddingTop="20px";divStatsParent.style.fontSize="14px";divStatsParent.style.textAlign="center";divStatsParent.style.fontFamily="Helvetica,Arial,sans-serif";divStatsParent.style.display="table";divStatsParent.style.margin="0px auto";divStatsParent.style.width="100%";divScore.innerHTML="<b>Score:</b></br>"+alignment.hsp[hsp].score;divScore.style.float="left";divScore.style.width="20%";divEvalue.innerHTML="<b>Expect:</b></br>"+alignment.hsp[hsp].eValue;divEvalue.style.float="left";divEvalue.style.width="20%";divIdentity.innerHTML=`<b>Identities:</b></br>${alignment.hsp[hsp].identitiesRel} (${alignment.hsp[hsp].identitiesFraction})`;divIdentity.style.float="left";divIdentity.style.width="20%";divPositives.innerHTML="<b>Positives:</b></br>"+alignment.hsp[hsp].positives+"%";divPositives.style.float="left";divPositives.style.width="20%";divGaps.innerHTML="<b>Gaps:</b></br>"+alignment.hsp[hsp].gaps+"%";divGaps.style.float="left";divGaps.style.width="20%";divClear.style.clear="both";divStatsParent.appendChild(divScore);divStatsParent.appendChild(divEvalue);divStatsParent.appendChild(divIdentity);divStatsParent.appendChild(divPositives);divStatsParent.appendChild(divGaps);divStatsParent.appendChild(divClear);alignmentContainer.appendChild(queryDiv);alignmentContainer.appendChild(comparisonDiv);alignmentContainer.appendChild(subjectDiv);alignmentPre.appendChild(span);alignmentPre.appendChild(divStatsParent);alignmentPre.appendChild(alignmentContainer);alignmentDiv.appendChild(alignmentPre);if(hsps>1){const buttonNext=document.createElement("button");buttonNext.className="btn";buttonNext.id="blast-single-alignment-next";buttonNext.innerHTML="Next HSP";buttonNext.style.marginTop="5px";buttonNext.style.marginRight="15px";buttonNext.style.float="right";const goTo=hsp===hsps-1?0:hsp+1;buttonNext.onclick=function(){createSingleAlignment(alignment,self,hsps,goTo)};alignmentPre.appendChild(buttonNext)}alignmentDiv.appendChild(buttonDownloadPNG);alignmentDiv.appendChild(buttonDownloadJPEG)}function downloadSingleAlignmentImg(alignment,type){const container=document.getElementById("blast-single-alignment-pre");const button=document.getElementById("blast-single-alignment-next");if(typeof button!="undefined"&&button!=null){container.removeChild(button)}html2canvas(container,{onrendered:function(canvas){document.body.appendChild(canvas);let a=document.createElement("a");document.body.appendChild(a);if(type==="JPEG"){a.href=canvas.toDataURL("image/jpeg")}else{a.href=canvas.toDataURL("img/png")}a.download=alignment.description+"-alignment."+type.toLowerCase();a.click();document.body.removeChild(canvas);document.body.removeChild(a);if(typeof button!="undefined"&&button!=null)container.appendChild(button);a=document.createElement("a");document.body.appendChild(a);a.href="#blast-single-alignment";a.click();document.body.removeChild(a)}})}function createSingleQueryDiv(query,start,end){const textDiv=document.createElement("div");const startDiv=document.createElement("div");const endDiv=document.createElement("div");const queryDiv=document.createElement("div");textDiv.innerHTML="Query";textDiv.style.fontWeight="bold";textDiv.style.display="inline-block";textDiv.style.marginRight="20px";textDiv.style.textAlign="right";textDiv.style.width="55px";startDiv.innerHTML=String(start);startDiv.style.fontWeight="bold";startDiv.style.display="inline-block";startDiv.style.marginRight="20px";startDiv.style.width="25px";endDiv.innerHTML=String(end);endDiv.style.fontWeight="bold";endDiv.style.display="inline-block";endDiv.style.marginLeft="20px";endDiv.style.marginRight="70px";queryDiv.appendChild(textDiv);queryDiv.appendChild(startDiv);for(let i=0;i<query.length;i++){const div=document.createElement("div");const letter=query.charAt(i);div.classList.add("blasterjs-alignment",`blasterjs-${letter!==" "?letter:"_"}`);div.innerHTML=letter;queryDiv.appendChild(div)}queryDiv.appendChild(endDiv);return queryDiv}function createSingleComparisonDiv(comparison){const comparisonDiv=document.createElement("div");const spaceDiv=document.createElement("div");spaceDiv.style.minWidth="120px";spaceDiv.style.minHeight="1px";spaceDiv.style.display="inline-block";comparisonDiv.appendChild(spaceDiv);for(let i=0;i<comparison.length;i++){const div=document.createElement("div");const letter=comparison.charAt(i);div.classList.add("blasterjs-alignment",`blasterjs-${letter!==" "?letter:"_"}`);div.innerHTML=letter;comparisonDiv.appendChild(div)}return comparisonDiv}function createSingleSubjectDiv(subject,start,end){const textDiv=document.createElement("div");const startDiv=document.createElement("div");const endDiv=document.createElement("div");const subjectDiv=document.createElement("div");textDiv.innerHTML="Subject";textDiv.style.fontWeight="bold";textDiv.style.display="inline-block";textDiv.style.textAlign="right";textDiv.style.marginRight="20px";textDiv.style.width="55px";startDiv.style.width="25px";startDiv.innerHTML=String(start);startDiv.style.fontWeight="bold";startDiv.style.display="inline-block";startDiv.style.marginRight="20px";endDiv.innerHTML=String(end);endDiv.style.fontWeight="bold";endDiv.style.display="inline-block";endDiv.style.marginLeft="20px";endDiv.style.marginRight="70px";subjectDiv.appendChild(textDiv);subjectDiv.appendChild(startDiv);for(let i=0;i<subject.length;i++){const div=document.createElement("div");const letter=subject.charAt(i);div.classList.add("blasterjs-alignment",`blasterjs-${letter!==" "?letter:"_"}`);div.innerHTML=subject.charAt(i);subjectDiv.appendChild(div)}subjectDiv.appendChild(endDiv);return subjectDiv}}})},{"js-class":1,"js-extend":2}]},{},[]);